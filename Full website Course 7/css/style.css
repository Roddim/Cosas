@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap'); /* To get the lato font */

:root {                             /* To create a variable, can be used elsewhere */
    --primary-color: #0478ed;     /* Custom properties need a -- */
    --secondary-color: #1c3f88;
    --dark-color: #002240;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
}

* {                                 /* The resets get done because there's default padding in everything */
    box-sizing: border-box;         /* To everything CSS related, let us add padding and margin and stuff without having to add to the width */
    padding: 0;
    margin: 0;
}

/* * {                                 To check all the elements in the site
    outline: 1px solid #f00 !important;
    opacity: 1 !important;
    visibility: visible !important;
  } */

body {
    font-family: "Lato", sans-serif;
    color: #333;
    line-height: 1.6;
}

ul {                                /* To eleminate the bullet points */
    list-style-type: none;
}

a {                                 /* To get rid of the underlines, makes all "a" tags black */
    text-decoration: none;
    color: #333;
}

h1, h2 {
    font-weight: 300;
    line-height: 1.2;
    margin: 10px 0;                 /* Top and bottom 10 left and right 0 */
}

p {                                 /* To make the paragraphs apart */
    margin: 10px 0;
}

img {                               /* To keep the images within the container */
    width: 100%;
}

code, pre {
    background-color: #333;
    color: #fff;
    padding: 10px;
}

/* Styling the navbar */
.navbar {                           /* Remember to make it responsive with mediaquerys, desktop first and then mobile */
    background-color: var(--primary-color);             /* Color used #0478ed */
    color: #fff;
    height: 70px;
}

.navbar ul {
    display: flex;
}

.navbar a:hover {
    border-bottom: 2px #fff solid;
}

.navbar a {
    color: #fff;
    padding: 10px;
    margin: 0 5px;
}

.navbar .flex {                     /* To separate the .flex class and use it elsewhere with the class .flex below */
    justify-content: space-between; /* puts the flex items in the space available, sparating the stuff in the navbar */
}

/* Showcase area */
.showcase {
    height: 400px;
    background-color:var(--primary-color);
    color: #fff;
    position: relative;
}

.showcase h1 {
    font-size: 40px;
}

.showcase p {
    margin: 20px 0;
}

.showcase .grid {
    grid-template-columns: 52% 45%; /*55% for the text and 45% for the form, with these percentajes there's overflow and scroll bars */
    gap: 30px;
    overflow: visible;              /* the form was overflowing by the height 350px, makes it go over the box */
}

.showcase-text {
    animation: slideInFromLeft 1s ease-in;
}

.showcase-form {                   /* To style the form */
    position: relative;            /* Because we are gonna move the thing inside the container we need this */
    top: 60px;
    height: 350px;
    width: 400px;
    padding: 40px;
    z-index: 100;                  /* To make it be on the front always */
    justify-self: flex-end;
    animation: slideInFromRight 1s ease-in
}

.showcase-form .form-control {     /* Form control wraps the inputs */
    margin: 30px 0;
}

.showcase-form input[type="text"],
.showcase-form input[type="email"] {
    border: 0;
    border-bottom: 1px solid #b4becb;
    width: 100%;
    padding: 3px;
    font-size: 16px;
}

.showcase-form input:focus {
    outline: none;                  /* To remove the border when clicking the name, company and email boxes */
}

/* Before and after pseudo selectors, to add the slant in the blue part */
.showcase::before, .showcase::after {
    content: "";
    position: absolute;             /* Need to study this relative absolute more */
    height: 100px;
    bottom: -70px;
    right: 0;
    left: 0;
    background-color: #fff;        /* Use this in red to see where this thing is */
    transform: skewY(-3deg);         /* It'll start a bit to the right and move with window size, can be changed */
    -webkit-transform: skewY(-3deg); /* webkits for other browsers */
    -moz-transform: skewY(-3deg);
    -ms-transform: skewY(-3deg);
}

/* Stats */
.stats {
    padding-top: 100px;
    animation: slideInFromBottom 1s ease-in;
}

.stats-heading {
    max-width: 500px;                 
    margin: auto;                    /* To put the text in the middle */
}

.stats .grid h3 {
    font-size: 35px;
}

.stats .grid p {
    font-size: 20px;
    font-weight: bold;
}

/* Cli */
.cli .grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);     /* to have 2 rows */
}

.cli .grid > *:first-child {         /* The first child is the img tag, so the img only gets afected */
    grid-column: 1 / span 2;
    grid-row: 1 /span 2;
}

/* Cloud */

.cloud .grid {
    grid-template-columns: 4fr 3fr;
}

/* Languages */

.languages .flex {                  /* To make the images go to the next line when reducing the window size */
    flex-wrap: wrap;
}

.languages .card {
    text-align: center;
    margin: 18px 10px 40px;
    transition: transform 0.2s ease-in;
}

.languages .card h4 {
    font-size: 20px;
    margin-bottom: 10px;
}

.languages .card:hover {
    transform: translateY(-15px);   /* Makes the logo go up on the y axis when hovered over */
}

/* Features page */
.features-head img,
.docs-head img {
    width: 200px;
    justify-self: flex-end;        /* Justifies just the img item in the features-head class/class */
}

.features-sub-head img {
    width: 300px;
    justify-self: flex-end;
}

.features-main .card > i {   /* > i to select all the "i" tags */
    margin-right: 20px;
}

.features-main .grid {      /* Side scroll bars can also be eliminated with padding */
    padding: 30px;
}

.features-main .grid:nth-child(1) {
    grid-column: 1 / span 3;
}

.features-main .card:nth-child(2) {     /* It need to be "grid" and not "card" because we are using the card one in other stuff */
    grid-column: 1 / span 2;
}

/* Another way to do this above */
.features-main .grid > *:first-child {
    grid-column: 1 / span 3;
}

.features-main .grid > *:nth-child(2) {
    grid-column: 1 / span 2;
}

/* Docs */
.docs-main h3 {
    margin: 20px;
}

.docs-main .grid {
    grid-template-columns: 1fr 2fr;
    align-items: flex-start;        /* aligns the item at the top, because align works on the cross axis (vertical) */
}

.docs-main nav li {
    font-size: 17px;
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: 1px #ccc solid;
}

.docs-main a:hover {
    font-weight: bold;
}

/* Footer */
.footer .social a {
    margin: 0 10px;
}

/* Animations, now they can be applied to certain elements */
@keyframes slideInFromLeft {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromTop {
    0% {
        transform: translateY(-100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromBottom {
        0% {
            transform: translateY(100%);
        }
    
        100% {
            transform: translateX(0);
        }
    }

/* Responsivenes */
/* 1. Tables and under  */
@media (max-width:768px) {
    /* body {display: none;}            This lets us see how big or small we can make the site, blanks the page if below the set ammount*/
    /* This below is to style all the grids */
    .grid, .showcase .grid,
    .stats .grid, .cli .grid,
    .cloud .grid,
    .features-main .grid,
    .docs-main .grid {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
    }

    .showcase {
        height: auto;
    }

    .showcase-text {
        text-align: center;
        margin-top: 40px;
        animation: slideInFromTop 1s ease-in
    }

    .showcase-form {
        justify-self: center;       /* Justify center justifies just that item */
        margin: auto;
        animation: slideInFromBottom 1s ease-in
    }

    .cli .grid > *:first-child {        
        grid-column: 1;
        grid-row: 1;
    }

    .features-head, .features-sub-head,
    .docs-head {
        text-align: center;
    }

    .features-head img, .features-sub-head img,
    .docs-head img {
        justify-self: center;
    }

    .features-main .grid > *:first-child,
    .features-main .grid > *:nth-child(2) {
        grid-column: 1;
    }
}

/* 2. Mobile */
@media (max-width:500px) {
    .navbar {
        height: 110px;
    }

    .navbar .flex {
        flex-direction: column;
    }

    .navbar ul {
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.1);
    }
}